---
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaNodePool
metadata:
  name: kafka-production-brokers
  namespace: kafka-production
  labels:
    strimzi.io/cluster: kafka-production-cluster
spec:
  replicas: 1
  roles:
    - broker
  storage:
    type: jbod
    volumes:
      - id: 0
        type: persistent-claim
        size: 10Gi
        deleteClaim: false
---
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaNodePool
metadata:
  name: kafka-production-controllers
  namespace: kafka-production
  labels:
    strimzi.io/cluster: kafka-production-cluster
spec:
  replicas: 1
  roles:
    - controller
  storage:
    type: jbod
    volumes:
      - id: 0
        type: persistent-claim
        size: 10Gi
        deleteClaim: false
---        
apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: kafka-production-cluster
  annotations:
    strimzi.io/kraft: enabled
    strimzi.io/node-pools: enabled  
  namespace: kafka-production
  labels:
    app: kafka-production-cluster
spec:
  kafka:
    version: 3.8.0
    listeners:
      - name: plain
        port: 9092
        type: internal
        tls: false
    resources:
      requests:
        memory: "500Mi"
        cpu: "200m"
      # limits:
      #   memory: "500Mi"
      #   cpu: "200"
    template:
      podDisruptionBudget:
        maxUnavailable: 0        
    config:
      default.replication.factor:                1
      min.insync.replicas:                       1
      offsets.topic.replication.factor:          1
      transaction.state.log.min.isr:             1
      transaction.state.log.replication.factor:  1
  entityOperator:
    topicOperator:
      resources:
        requests:
          memory: "10Mi"
          cpu: "10m"
      #   limits:
      #     memory: "256Mi"
      #     cpu: "200m"
    userOperator:
      resources:
        requests:
          memory: "10Mi"
          cpu: "10m"
        # limits:
        #   memory: "512Mi"
        #   cpu: "1"
